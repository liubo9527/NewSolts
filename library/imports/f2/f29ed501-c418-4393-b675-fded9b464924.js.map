{"version":3,"sources":["../../../../assets/Script/assets/Script/ButtonScale.js"],"names":["cc","Class","extends","Component","properties","interactableType","selectType","selectFlag","onLoad","timeCallback","dt","node","on","Node","EventType","TOUCH_START","event","scale","TOUCH_END","onFunction","find","getComponent","btnActionCallBack","TOUCH_CANCEL","scheduleOnce","setInteractableType","interType","color","Color"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,0BAAiB,IAXT;AAYRC,oBAAW,CAZH;AAaRC,oBAAY,KAbJ,CAaU;;AAbV,KAHP;AAmBL;;;;;AAKA;AACAC,YAAQ,kBAAY;AAChB;;;;;;;;;AAUA;;;AAIA,YAAIC,eAAe,SAAfA,YAAe,CAAUC,EAAV,EACnB;AACG,iBAAKC,IAAL,CAAUC,EAAV,CAAaZ,GAAGa,IAAH,CAAQC,SAAR,CAAkBC,WAA/B,EAA2C,UAASC,KAAT,EAAe;AACzD,oBAAG,KAAKX,gBAAR,EACJ;AACK,yBAAKM,IAAL,CAAUM,KAAV,GAAkB,GAAlB;AACJ;AAEA,aANE,EAMD,IANC;;AAQH,iBAAKN,IAAL,CAAUC,EAAV,CAAaZ,GAAGa,IAAH,CAAQC,SAAR,CAAkBI,SAA/B,EAAyC,UAASF,KAAT,EAAe;AACpD,qBAAKL,IAAL,CAAUM,KAAV,GAAkB,CAAlB;AACA,oBAAG,KAAKZ,gBAAR,EACA;AACI,wBAAIc,aAAanB,GAAGoB,IAAH,CAAQ,QAAR,EAAkBC,YAAlB,CAA+B,MAA/B,CAAjB;AACAF,+BAAWG,iBAAX,CAA6B,KAAKhB,UAAlC;AAEH;AAEJ,aATD,EASE,IATF;;AAWA,iBAAKK,IAAL,CAAUC,EAAV,CAAaZ,GAAGa,IAAH,CAAQC,SAAR,CAAkBS,YAA/B,EAA4C,UAASP,KAAT,EAAe;AACvD,qBAAKL,IAAL,CAAUM,KAAV,GAAkB,CAAlB;AACH,aAFD,EAEE,IAFF;AAIC,SAzBD;;AA2BD,aAAKO,YAAL,CAAkBf,YAAlB,EAAgC,KAAhC;AAEF,KArEI;;AAuELgB,yBAAoB,6BAASC,SAAT,EACpB;AACI;AACA,aAAKrB,gBAAL,GAAwBqB,SAAxB;AACA;;;;;;;;;;;AAWC,YAAIjB,eAAe,SAAfA,YAAe,CAAUC,EAAV,EACpB;AACG,gBAAGgB,SAAH,EACH;AACI,qBAAKf,IAAL,CAAUgB,KAAV,GAAkB,IAAI3B,GAAG4B,KAAP,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,CAAlB;AACH,aAHE,MAKH;AACG,qBAAKjB,IAAL,CAAUgB,KAAV,GAAkB,IAAI3B,GAAG4B,KAAP,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,CAAlB;AACF;AAEA,SAXA;;AAaF,aAAKJ,YAAL,CAAkBf,YAAlB,EAAgC,KAAhC;;AAEC;AACH;;AAED;AACA;;AAEA;AA3GK,CAAT","file":"ButtonScale.js","sourceRoot":"../../../../assets/Script","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        \n        interactableType:true,\n        selectType:0,\n        selectFlag: false,//添加选中状态\n        \n    },\n    /*pax: function(c1, c2)\n    {\n       return c2 - c1;\n    },*/\n\n    // use this for initialization\n    onLoad: function () {\n        /*let arrDemo = new Array(1, 3, 2, 5, 6);\n        //arrDemo.sort(this.pax);\n        //arrDemo.sort(function(a,b){return a>b?1:-1});//从小到大排序\n        arrDemo.sort(function(a,b){return a<b?1:-1});//从大到小排序\n\n        for(let i = 0; i < arrDemo.length; i++)\n        {\n            cc.log(\"testsort\" + arrDemo[i]);\n        }*/\n        \n        //cc.log(\"testsort bbbbbbbbbbbbbbbbbb\" );\n        \n        \n        \n        var timeCallback = function (dt)\n        {\n           this.node.on(cc.Node.EventType.TOUCH_START,function(event){\n            if(this.interactableType)\n        {\n             this.node.scale = 0.8;\n        }\n           \n        },this);\n        \n        this.node.on(cc.Node.EventType.TOUCH_END,function(event){\n            this.node.scale = 1;\n            if(this.interactableType)\n            {\n                var onFunction = cc.find('Canvas').getComponent('Game');\n                onFunction.btnActionCallBack(this.selectType);\n                \n            }\n           \n        },this);\n        \n        this.node.on(cc.Node.EventType.TOUCH_CANCEL,function(event){\n            this.node.scale = 1;\n        },this);\n            \n        }\n        \n       this.scheduleOnce(timeCallback, 0.001);\n        \n    },\n    \n    setInteractableType:function(interType)\n    {\n        //cc.log(\"setInteractableType \" + interType);\n        this.interactableType = interType;\n        /*\n        if(interType)\n        {\n            this.node.color = new cc.Color(255, 255, 255);\n        }\n        else\n        {\n           this.node.color = new cc.Color(124, 124, 124); \n        }\n        */\n        \n         var timeCallback = function (dt)\n        {\n           if(interType)\n        {\n            this.node.color = new cc.Color(255, 255, 255);\n        }\n        else\n        {\n           this.node.color = new cc.Color(124, 124, 124); \n        }\n            \n        }\n        \n       this.scheduleOnce(timeCallback, 0.001);\n       \n        //cc.log(\"this.node.color \" + this.node.color.r);\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n"]}