{"version":3,"sources":["../../../../assets/Script/assets/Script/BroadCast.js"],"names":["NetData","require","Common","cc","Class","extends","Component","properties","broadcastData","index","labels","default","type","Label","firstFlag","resetFlag","onLoad","dataCallback","getInst","InitResult","marqueeInfos","length","freeArray","Array","activeArray","i","push","show","node","x","resetLabel","label","shift","self","getNick","uid","j","nick","nicknick","str","msg","replace","indexOf","color","Color","string","update","dt","width"],"mappings":"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","file":"BroadCast.js","sourceRoot":"../../../../assets/Script","sourcesContent":["var NetData = require(\"NetData\");\nvar Common = require(\"Common\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        broadcastData : null,\n        index : 0,\n        labels : {\n            default : [],\n            type : cc.Label\n        },\n        firstFlag : true,\n        resetFlag : true\n    },\n\n    // use this for initialization\n    onLoad: function () {  \n    },\n\n    dataCallback : function(){\n        this.broadcastData = NetData.NetData.getInst().InitResult.marqueeInfos;\n        if(this.broadcastData && this.broadcastData.length > 0){\n                this.index = 0;\n                if(this.firstFlag){ \n                    this.freeArray = new Array();\n                    this.activeArray = new Array();\n                    for(let i = 0; i < 3; ++i){\n                        this.freeArray.push(this.labels[i]);\n                    }   \n                    this.firstFlag = false;\n                    this.show();\n                }\n        }\n    },\n\n    show : function(){\n        this.node.x = 0;\n        this.resetLabel();\n    },\n\n    resetLabel : function(){\n        if(this.resetFlag && this.freeArray.length > 0){\n            this.resetFlag = false;\n            let label = this.freeArray.shift();\n            label.node.x = 420;\n\n            if(this.index >= this.broadcastData.length){\n                this.index = 0;\n            }\n\n            var self = this;\n            Common.Common.getInst().getNick(0,this.broadcastData[this.index].uid, function(j,nick,uid){\n                    let nicknick = nick;\n                    let str = self.broadcastData[self.index].msg.replace(/#{user}/, nicknick);\n                    if(self.broadcastData[self.index].msg.indexOf(\"天降\") > 0){\n                        label.node.color = new cc.Color(255, 246, 0);\n                    }else{\n                        label.node.color = new cc.Color(247, 241, 230);\n                    }\n                    label.string = str;\n                    self.index++;\n                    self.activeArray.push(label);\n                    self.resetFlag = true;\n            });\n        }\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        if(!this.firstFlag){\n            for(let i = 0; i < this.activeArray.length; ++i){\n                this.activeArray[i].node.x -= 200 * dt;\n            }\n        \n            if(this.activeArray.length > 0){\n                if(this.activeArray[0].node.x + this.activeArray[0].node.width < -600){\n                    this.freeArray.push(this.activeArray.shift());\n                }\n\n                if(this.activeArray[this.activeArray.length - 1].node.x + this.activeArray[this.activeArray.length - 1].node.width < 200){\n                    this.resetLabel();\n                }\n            }\n        }\n    },\n});\n"]}